@use "sass:math";

.root {
	$increase: 1%;
	background-color: #001c53;
	margin: 0;
	padding: min(100px, 9vmin) 0;
	display: grid;

	grid-template-rows: 1fr auto;

	gap: min(96px, #{math.div(32, 3) * 1}vmin) 0;

	overflow: hidden;

	place-items: end stretch;
	place-content: center stretch;

	color: #fff;

	position: relative;

	&::before {
		content: "";
		position: absolute;
		width: 100% + $increase * 2;
		height: 100% + $increase * 2;

		left: -$increase;
		top: -$increase;
		background-image: url("./assets/background.jpg");

		background-size: cover;
		background-position: center;
		background-repeat: no-repeat;

		transition: transform 1s 0.2s ease-in;

		transform: translate(calc(#{$increase} * var(--ratio-y, 0)), calc(#{$increase} * var(--ratio-x, 0)));

		@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
			background-image: url("./assets/background@2x.jpg");
		}

		@media (-webkit-min-device-pixel-ratio: 3) {
			background-image: url("./assets/background@3x.jpg");
		}
	}
}

.wrap {
	transform-style: preserve-3d;
	perspective: 100vmin;
	position: relative;

	justify-self: start;
	transition: transform 1s ease-in-out;

	width: 100%;
	height: 100%;
	display: grid;
	place-content: center start;
	place-items: center start;

	/* For debugging */
	/* background-color: rgba(tomato, 50%);
	&::before,
	&::after {
		position: absolute;
		width: inherit;
		height: inherit;
		content: "";
		background-color: rgba(darkcyan, 80%);
	}
	&::before {
		transform: rotateY(90deg) translateZ(50vmin);
	}
	&::after {
		transform: rotateY(-90deg) translateZ(50vmin);
		left: 0;
		top: 0;
	} */
}

.screen {
	transition: transform 1s ease-in-out;
	max-width: 100%;
	position: relative;
	left: -3.2vw;
}

.result {
	transition: transform 1s ease-in-out;
	position: absolute;
	inset: auto;
	font-size: 1.1vw;
	transform: scale(0.306)
		translate3d(calc(var(--ratio-x, 0) * 2vmin + 260%), calc(var(--ratio-y, 0) * 1vmin + 160%), 80vmin)
		rotateX(calc(var(--ratio-y, 0) * -2deg)) rotateY(calc(var(--ratio-x, 0) * -1deg));
}

.graph {
	transition: transform 1s ease-in-out;
	position: absolute;
	inset: auto;
	width: 25vw;
	height: auto;
	transform: scale(0.65)
		translate3d(calc(var(--ratio-y, 0) * -4vmin + 136%), calc(var(--ratio-y, 0) * -4vmin - 70%), 40vmin)
		rotateX(calc(var(--ratio-y, 0) * -5deg)) rotateY(calc(var(--ratio-x, 0) * -5deg));
}

.caption {
	z-index: 1;
	display: grid;
	gap: 20px 68px;
	justify-self: center;
	align-content: center;
	align-items: center;
	max-width: 635px + 20px * 2;
	padding: 0 20px;

	font-size: 16px;
	line-height: 1.57;

	@media (min-width: 900px) {
		grid-template-columns: 1fr auto;
	}
}
